# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  if Vagrant.has_plugin?("vagrant-cachier")
    config.cache.enable :yum
  end

  ansible_inventory_dir = "ansible/hosts"
  config.vm.box = "geerlingguy/centos7"
  config.vm.hostname = "vagrant"
  config.vm.network :forwarded_port, guest: 5000, host: 8000
  config.vm.synced_folder '.', '/vagrant', :disabled => true
  config.vm.synced_folder '.', '/srv/app'

  config.vm.provision 'ansible' do |ansible|
    ansible.sudo = true
    ansible.inventory_path = "#{ansible_inventory_dir}/vagrant"
    ansible.playbook = 'ansible/nas.yml'
    ansible.limit = "all"
  end

  # setup the ansible inventory file
  Dir.mkdir(ansible_inventory_dir) unless Dir.exist?(ansible_inventory_dir)
  File.open("#{ansible_inventory_dir}/vagrant" ,'w') do |f|
    f.write "[#{settings['vm_name']}]\n"
    f.write "#{settings['ip_address']}\n"
  end

  config.vm.provider 'vmware_fusion' do |fusion|
    fusion.vmx['memsize'] = '512'
    fusion.vmx['numvcpus'] = '1'
    fusion.vmx['ethernet0.pcislotnumber'] = '33'
  end

  config.vm.provider 'virtualbox' do |vb|
    vb.memory = '512'
    vb.cpus = '1'
  end


  # SSH Setup
  ssh_pub_key = File.readlines("#{Dir.home}/.ssh/id_rsa.pub").first.strip
  config.vm.provision :shell, :privileged => true, :inline => <<-SHELL
  echo #{ssh_pub_key} >> /home/vagrant/.ssh/authorized_keys
  SHELL

  config.vm.provision :file, :source => "#{ENV['HOME']}/.ssh/id_rsa.pub", :destination => "/tmp/.ssh/id_rsa.pub"
  config.vm.provision :file, :source => "#{ENV['HOME']}/.ssh/id_rsa", :destination => "/tmp/.ssh/id_rsa"
  config.vm.provision :file, :source => "#{ENV['HOME']}/.ssh/known_hosts", :destination => "/tmp/.ssh/known_hosts"

end
